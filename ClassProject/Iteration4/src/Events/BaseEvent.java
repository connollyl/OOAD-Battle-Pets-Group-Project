/**
 * This class is used as an abstract class for the other events to pull from.
 * Author: Aidan Gengler
 */
package Events;

public class BaseEvent 
{
	private EventTypes eventType;
	
	/**
	 * Sets the type of event for later use.
	 * @param eType
	 */
	public BaseEvent(EventTypes eType)
	{
		this.eventType = eType;
	}
	
	/**
	 * returns the type of event that this object is.
	 * @return
	 */
	public EventTypes getEventType()
	{
		return eventType;
	}
	
	/**
	 * Returns a string of all data in the base event class.
	 */
	@Override
	public String toString() {
		return "BaseEvent [eventType=" + eventType + "]";
	}

	/**
	 * Autogenerated hashcode for the base event class.
	 */
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((eventType == null) ? 0 : eventType.hashCode());
		return result;
	}

	/**
	 * Autogenerated equals function for the comparison of two
	 * base event objects.
	 */
	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		BaseEvent other = (BaseEvent) obj;
		if (eventType != other.eventType)
			return false;
		return true;
	}
	
	
}
